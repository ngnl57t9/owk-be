// Code generated by entc, DO NOT EDIT.

package user

import (
	"time"
)

const (
	// Label holds the string label denoting the user type in the database.
	Label = "user"
	// FieldID holds the string denoting the id field in the database.
	FieldID        = "id"         // FieldName holds the string denoting the name vertex property in the database.
	FieldName      = "name"       // FieldUsername holds the string denoting the username vertex property in the database.
	FieldUsername  = "username"   // FieldPassword holds the string denoting the password vertex property in the database.
	FieldPassword  = "password"   // FieldSalt holds the string denoting the salt vertex property in the database.
	FieldSalt      = "salt"       // FieldUpdatedAt holds the string denoting the updatedat vertex property in the database.
	FieldUpdatedAt = "updated_at" // FieldCreatedAt holds the string denoting the createdat vertex property in the database.
	FieldCreatedAt = "created_at"

	// EdgeSession holds the string denoting the session edge name in mutations.
	EdgeSession = "session"
	// EdgeProfile holds the string denoting the profile edge name in mutations.
	EdgeProfile = "profile"
	// EdgeRoles holds the string denoting the roles edge name in mutations.
	EdgeRoles = "roles"

	// Table holds the table name of the user in the database.
	Table = "users"
	// SessionTable is the table the holds the session relation/edge.
	SessionTable = "sessions"
	// SessionInverseTable is the table name for the Session entity.
	// It exists in this package in order to avoid circular dependency with the "session" package.
	SessionInverseTable = "sessions"
	// SessionColumn is the table column denoting the session relation/edge.
	SessionColumn = "user_session"
	// ProfileTable is the table the holds the profile relation/edge.
	ProfileTable = "profiles"
	// ProfileInverseTable is the table name for the Profile entity.
	// It exists in this package in order to avoid circular dependency with the "profile" package.
	ProfileInverseTable = "profiles"
	// ProfileColumn is the table column denoting the profile relation/edge.
	ProfileColumn = "user_profile"
	// RolesTable is the table the holds the roles relation/edge. The primary key declared below.
	RolesTable = "role_users"
	// RolesInverseTable is the table name for the Role entity.
	// It exists in this package in order to avoid circular dependency with the "role" package.
	RolesInverseTable = "roles"
)

// Columns holds all SQL columns for user fields.
var Columns = []string{
	FieldID,
	FieldName,
	FieldUsername,
	FieldPassword,
	FieldSalt,
	FieldUpdatedAt,
	FieldCreatedAt,
}

var (
	// RolesPrimaryKey and RolesColumn2 are the table columns denoting the
	// primary key for the roles relation (M2M).
	RolesPrimaryKey = []string{"role_id", "user_id"}
)

var (
	// NameValidator is a validator for the "name" field. It is called by the builders before save.
	NameValidator func(string) error
	// UsernameValidator is a validator for the "username" field. It is called by the builders before save.
	UsernameValidator func(string) error
	// DefaultUpdatedAt holds the default value on creation for the updatedAt field.
	DefaultUpdatedAt func() time.Time
	// UpdateDefaultCreatedAt holds the default value on update for the createdAt field.
	UpdateDefaultCreatedAt func() time.Time
)
